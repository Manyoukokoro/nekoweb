<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.nekotori.nekoweb.mapper.ArticleDetailsMapper">
  <resultMap id="BaseResultMap" type="xyz.nekotori.nekoweb.entity.ArticleDetailsDo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="numbers" jdbcType="INTEGER" property="numbers" />
    <result column="origin" jdbcType="BIGINT" property="origin" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="xyz.nekotori.nekoweb.entity.ArticleDetailsDoWithBLOBs">
    <result column="category" jdbcType="LONGVARCHAR" property="category" />
    <result column="comments" jdbcType="LONGVARCHAR" property="comments" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="keyword" jdbcType="LONGVARCHAR" property="keyword" />
    <result column="like_users" jdbcType="LONGVARCHAR" property="likeUsers" />
    <result column="meta" jdbcType="LONGVARCHAR" property="meta" />
    <result column="tags" jdbcType="LONGVARCHAR" property="tags" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic, author, create_time, description, img_url, numbers, origin, `state`, title, 
    update_time
  </sql>
  <sql id="Blob_Column_List">
    category, comments, content, keyword, like_users, meta, tags
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `article_details`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `article_details`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample">
    delete from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `article_details` (topic, author, create_time, 
      description, img_url, numbers, 
      origin, `state`, title, 
      update_time, category, comments, 
      content, keyword, like_users, 
      meta, tags)
    values (#{topic,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{numbers,jdbcType=INTEGER}, 
      #{origin,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{category,jdbcType=LONGVARCHAR}, #{comments,jdbcType=LONGVARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{keyword,jdbcType=LONGVARCHAR}, #{likeUsers,jdbcType=LONGVARCHAR}, 
      #{meta,jdbcType=LONGVARCHAR}, #{tags,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `article_details`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="topic != null">
        topic,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="numbers != null">
        numbers,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="keyword != null">
        keyword,
      </if>
      <if test="likeUsers != null">
        like_users,
      </if>
      <if test="meta != null">
        meta,
      </if>
      <if test="tags != null">
        tags,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        #{numbers,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        #{category,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="keyword != null">
        #{keyword,jdbcType=LONGVARCHAR},
      </if>
      <if test="likeUsers != null">
        #{likeUsers,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null">
        #{meta,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample" resultType="java.lang.Long">
    select count(*) from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `article_details`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.topic != null">
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrl != null">
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.numbers != null">
        numbers = #{record.numbers,jdbcType=INTEGER},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.keyword != null">
        keyword = #{record.keyword,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.likeUsers != null">
        like_users = #{record.likeUsers,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.meta != null">
        meta = #{record.meta,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update `article_details`
    set id = #{record.id,jdbcType=BIGINT},
      topic = #{record.topic,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      numbers = #{record.numbers,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=BIGINT},
      `state` = #{record.state,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=LONGVARCHAR},
      comments = #{record.comments,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR},
      keyword = #{record.keyword,jdbcType=LONGVARCHAR},
      like_users = #{record.likeUsers,jdbcType=LONGVARCHAR},
      meta = #{record.meta,jdbcType=LONGVARCHAR},
      tags = #{record.tags,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `article_details`
    set id = #{record.id,jdbcType=BIGINT},
      topic = #{record.topic,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      numbers = #{record.numbers,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=BIGINT},
      `state` = #{record.state,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoWithBLOBs">
    update `article_details`
    <set>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="numbers != null">
        numbers = #{numbers,jdbcType=INTEGER},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=LONGVARCHAR},
      </if>
      <if test="likeUsers != null">
        like_users = #{likeUsers,jdbcType=LONGVARCHAR},
      </if>
      <if test="meta != null">
        meta = #{meta,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoWithBLOBs">
    update `article_details`
    set topic = #{topic,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      origin = #{origin,jdbcType=BIGINT},
      `state` = #{state,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=LONGVARCHAR},
      comments = #{comments,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      keyword = #{keyword,jdbcType=LONGVARCHAR},
      like_users = #{likeUsers,jdbcType=LONGVARCHAR},
      meta = #{meta,jdbcType=LONGVARCHAR},
      tags = #{tags,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDo">
    update `article_details`
    set topic = #{topic,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      numbers = #{numbers,jdbcType=INTEGER},
      origin = #{origin,jdbcType=BIGINT},
      `state` = #{state,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache />
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="xyz.nekotori.nekoweb.entity.ArticleDetailsDoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `article_details`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>